{
  "_from": "fmt",
  "_id": "fmt@1.0.0",
  "_inBundle": false,
  "_integrity": "sha1-f0yBq9prtXjSC04hP0IGLta9JrE=",
  "_location": "/fmt",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "fmt",
    "fetchSpec": "latest",
    "name": "fmt",
    "raw": "fmt",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/fmt/-/fmt-1.0.0.tgz",
  "_shasum": "7f4c81abda6bb578d20b4e213f42062ed6bd26b1",
  "_shrinkwrap": null,
  "_spec": "fmt",
  "_where": "/home/veluvijay/web__app/server-backend",
  "author": {
    "email": "andychilton@gmail.com",
    "name": "Andrew Chilton",
    "url": "http://chilts.org/"
  },
  "bugs": {
    "url": "http://github.com/chilts/fmt/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Command line output formatting.",
  "devDependencies": {},
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/chilts/fmt",
  "keywords": [
    "cli",
    "cmd",
    "console",
    "dump",
    "format",
    "output",
    "stdout",
    "verbose"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/chilts/fmt/raw/master/LICENSE"
    }
  ],
  "main": "fmt.js",
  "name": "fmt",
  "optionalDependencies": {},
  "readme": "# fmt - Command Line Output Formatting #\n\nNote: this library is considered stable. It hasn't been changed much since 2012 yet it is still being used across the\nnpm ecosystem. If you don't see any updates, it isn't because it is unmaintained but because it just works. Raise an\nissue for bug fixes or feature requests.\n\n## Example ##\n\n```\nvar fmt = require('fmt');\n\nfmt.sep();\nfmt.title('The Truth about Cats');\nfmt.field('Name', 'Felix');\nfmt.field('Description', 'Regal. Mysterious with a wise look in her eyes.');\nfmt.field('Legs', 4);\nfmt.title('The Truth about Dogs');\nfmt.field('Name', 'Fido');\nfmt.field('Description', 'Bouncy. Out there, shiny, long brown coat.');\nfmt.field('Legs', 2);\nfmt.sep();\nfmt.title('A List');\nfmt.li('item 1');\nfmt.li('the second item');\nfmt.li('the third and final item');\nfmt.separator();\n```\n\nHas the output:\n\n```\n===============================================================================\n--- The Truth about Cats ------------------------------------------------------\nName                 : Felix\nDescription          : Regal. Mysterious with a wise look in her eyes.\nLegs                 : 4\n--- The Truth about Dogs ------------------------------------------------------\nName                 : Fido\nDescription          : Bouncy. Out there, shiny, long brown coat.\nLegs                 : 2\n===============================================================================\n--- A List --------------------------------------------------------------------\n* item 1\n* the second item\n* the third and final item\n===============================================================================\n```\n\n## Usage ##\n\n### fmt.separator() (alias: fmt.sep()) ###\n\nMakes a double line on the screen which is 79 chars long.\n\ne.g.\n\n```\nfmt.separator();\nfmt.sep();\n\n->\n\n===============================================================================\n```\n\n### fmt.line() ###\n\nMakes a line on the screen which is 79 chars long.\n\ne.g.\n\n```\nfmt.line()\n\n->\n\n-------------------------------------------------------------------------------\n```\n\n### fmt.title(title) ###\n\nRenders a title with three '-', then the title, then more (until the 79th char).\n\ne.g.\n\n```\nfmt.title('The Truth about Cats');\n\n->\n\n--- The Truth about Cats ------------------------------------------------------\n```\n\n### fmt.field(key, value) ###\n\nRenders a line with a key and then the value, but with the key padded to 20 chars so that each field lines up.\n\n```\nfmt.field('Name', 'Fido');\nfmt.field('Description', 'Bouncy. Out there, shiny, long brown coat.');\nfmt.field('Legs', 2);\n\n->\n\nName                 : Fido\nDescription          : Bouncy. Out there, shiny, long brown coat.\nLegs                 : 2\n```\n\n### fmt.subfield(key, value) ###\n\nRenders a line with a key (preceded by '- ') and then the value, but with the key padded to 20 chars so that each field\nlines up. This can be helpful when you have a field, then other fields related to that one.\n\ne.g.\n\n```\nfs.stat(__filename, function(err, stats) {\n    fmt.field('File', __filename);\n    fmt.subfield('size', stats.size);\n    fmt.subfield('uid', stats.uid);\n    fmt.subfield('gid', stats.gid);\n    fmt.subfield('ino', stats.ino);\n    fmt.subfield('ctime', stats.ctime);\n    fmt.subfield('mtime', stats.mtime);\n});\n\n->\n\nFile                 : /home/user/path/to/cats-and-dogs.js\n- size               : 1003\n- uid                : 1000\n- gid                : 1000\n- ino                : 17567406\n- ctime              : Sun Aug 19 2012 17:08:52 GMT+1200 (NZST)\n- mtime              : Sun Aug 19 2012 17:08:52 GMT+1200 (NZST)\n```\n\n### fmt.li(msg) ###\n\nPrints the msg preceded with a '* ', so that it looks like a list.\n\ne.g.\n\n```\nfmt.title('A List');\nfmt.li('item 1');\nfmt.li('the second item');\nfmt.li('the third and final item');\nfmt.line()\n\n->\n\n--- A List --------------------------------------------------------------------\n* item 1\n* the second item\n* the third and final item\n-------------------------------------------------------------------------------\n```\n\n### fmt.dump(data[, name]) ###\n\nPrints a dump of the data, with the optional name beforehand. This is basically a shortcut for :\nconsole.log(util.inspect(data, false, null, true));\n\ne.g.\n\n```\nfs.stat(__filename, function(err, stats) {\n    fmt.separator();\n    fmt.title('Dump (with name)');\n    fmt.dump(stats, 'stats');\n    fmt.separator();\n    fmt.title('Dump');\n    fmt.dump(stats);\n    fmt.separator();\n});\n\n->\n\n===============================================================================\n--- Dump (with name) ----------------------------------------------------------\nstats : { dev: 2049,\n  ino: 17567406,\n  mode: 33188,\n  nlink: 1,\n  uid: 1000,\n  gid: 1000,\n  rdev: 0,\n  size: 1025,\n  blksize: 4096,\n  blocks: 8,\n  atime: Sun Aug 19 2012 17:28:54 GMT+1200 (NZST),\n  mtime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST),\n  ctime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST) }\n===============================================================================\n--- Dump ----------------------------------------------------------------------\n{ dev: 2049,\n  ino: 17567406,\n  mode: 33188,\n  nlink: 1,\n  uid: 1000,\n  gid: 1000,\n  rdev: 0,\n  size: 1025,\n  blksize: 4096,\n  blocks: 8,\n  atime: Sun Aug 19 2012 17:28:54 GMT+1200 (NZST),\n  mtime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST),\n  ctime: Sun Aug 19 2012 17:28:51 GMT+1200 (NZST) }\n===============================================================================\n```\n\n### fmt.msg(msg) ###\n\nPrints the msg as-is! :)\n\ne.g.\n\n```\nfmt.title('Example');\nfmt.msg('Output as-is!');\nfmt.line();\n\n->\n\n--- Example -------------------------------------------------------------------\nOutput as-is!\n-------------------------------------------------------------------------------\n```\n\n# Author #\n\nWritten by [Andrew Chilton](http://chilts.org/) - [Blog](http://chilts.org/) -\n[Twitter](https://twitter.com/andychilton).\n\n# License #\n\n* [Copyright 2012-2014 Andrew Chilton.  All rights reserved.](http://chilts.mit-license.org/2012/)\n\n(Ends)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/chilts/fmt.git"
  },
  "version": "1.0.0"
}
